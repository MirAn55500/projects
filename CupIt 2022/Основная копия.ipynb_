{"cells":[{"cell_type":"markdown","metadata":{"id":"181SHvPi_urs"},"source":["Описание проекта:\n","1. Документация к данным\n","\n","client_id Уникальный идентификатор клиента, число от 0 до Х\n","rto_n Сумма товарооборота клиента в месяц, где n — номер месяца\n","(n может быть в пределах 1...12)\n","\n","rto_n Сумма товарооборота клиента в месяц, где n — номер месяца\n","\n","rto_n_category\n","Сумма товарооборота клиента в месяц в определенной категории,\n","где n — номер месяца (n может быть в пределах 1...12),\n","category — название одной из категорий\n","\n","rto_std_n Стандартное отклонение суммы товарооборота от чека\n","к чеку в месяц, где n — номер месяца (n может быть в пределах 1...12)\n","\n","rto_std_n_\n","category\n","Стандартное отклонение суммы товарооборота от чека к чеку\n","в месяц в определенной категории, где n — номер месяца (n может\n","быть в пределах 1...12), category — название одной из категорий\n","\n","cnt_checks_n Количество уникальных чеков клиента в месяц,\n","где n — номер месяца (n может быть в пределах 1...12)\n","\n","cnt_checks_n_\n","category\n","Количество уникальных чеков клиента в месяц в определенной\n","категории, где n — номер месяца (n может быть в пределах 1...12),\n","category — название одной из категорий\n","\n","is_in_club Флаг участия в клубе, 1 — участник клуба, 0 — не участвует в клубе"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4352,"status":"ok","timestamp":1646771416908,"user":{"displayName":"Андрей Миронов","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13288426768569375119"},"user_tz":-180},"id":"jX1tD2EP3UpF","outputId":"583ae6de-fc58-4f14-8c32-f7b883d2ff7e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: catboost in /usr/local/lib/python3.7/dist-packages (1.0.4)\n","Requirement already satisfied: numpy>=1.16.0 in /usr/local/lib/python3.7/dist-packages (from catboost) (1.21.5)\n","Requirement already satisfied: pandas>=0.24.0 in /usr/local/lib/python3.7/dist-packages (from catboost) (1.3.5)\n","Requirement already satisfied: plotly in /usr/local/lib/python3.7/dist-packages (from catboost) (5.5.0)\n","Requirement already satisfied: graphviz in /usr/local/lib/python3.7/dist-packages (from catboost) (0.10.1)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.7/dist-packages (from catboost) (1.4.1)\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.7/dist-packages (from catboost) (3.2.2)\n","Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from catboost) (1.15.0)\n","Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->catboost) (2.8.2)\n","Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.24.0->catboost) (2018.9)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (1.3.2)\n","Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (3.0.7)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib->catboost) (0.11.0)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.7/dist-packages (from plotly->catboost) (8.0.1)\n"]}],"source":["pip install catboost"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"gnaCuHeT-z7h"},"outputs":[],"source":["#библиотеки для работы с данными\n","import pandas as pd\n","import numpy as np\n","#используемые модели\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.ensemble import GradientBoostingClassifier\n","from catboost import CatBoostClassifier\n","#вспомогательные библиотеки\n","from sklearn.model_selection import train_test_split\n","from sklearn.model_selection import cross_val_score\n","from sklearn.model_selection import GridSearchCV\n","#метрики\n","from sklearn.metrics import f1_score\n","from sklearn.metrics import precision_score\n","\n","import seaborn as sns   #графики\n","from sklearn.utils import shuffle   #перемешивание"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":540},"executionInfo":{"elapsed":6719,"status":"ok","timestamp":1646771423618,"user":{"displayName":"Андрей Миронов","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13288426768569375119"},"user_tz":-180},"id":"QKd_Qm2D_Sou","outputId":"fa768798-1673-48e3-9eee-953d742bfce5"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]},{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-b7966ce2-0a91-4234-9c5a-87c3dc86a491\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>client_id</th>\n","      <th>is_in_club</th>\n","      <th>cnt_checks_10_Мясная гастрономия</th>\n","      <th>rto_std_11</th>\n","      <th>rto_6</th>\n","      <th>rto_12_Сыры</th>\n","      <th>rto_12_Птица и изделия из птицы</th>\n","      <th>rto_8</th>\n","      <th>cnt_checks_9</th>\n","      <th>rto_9_Мясная гастрономия</th>\n","      <th>...</th>\n","      <th>rto_stddev_12_Сыры</th>\n","      <th>rto_6_Крупы и зерновые</th>\n","      <th>rto_stddev_7_Рыба и рыбные изделия</th>\n","      <th>rto_stddev_8_Овощи - Фрукты</th>\n","      <th>rto_8_Рыба и рыбные изделия</th>\n","      <th>rto_11_Сыры</th>\n","      <th>cnt_checks_8_Сыры</th>\n","      <th>cnt_checks_8</th>\n","      <th>rto_stddev_9_Мясная гастрономия</th>\n","      <th>rto_stddev_12_Крупы и зерновые</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>300.021342</td>\n","      <td>2418.116714</td>\n","      <td>853.016746</td>\n","      <td>NaN</td>\n","      <td>5092.170392</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>73.846425</td>\n","      <td>148.316558</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>519.031384</td>\n","      <td>19899.211736</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>32392.636661</td>\n","      <td>7.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>225.219998</td>\n","      <td>301.404157</td>\n","      <td>525.868862</td>\n","      <td>1153.293331</td>\n","      <td>7.0</td>\n","      <td>21.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>131.165948</td>\n","      <td>411.347689</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>1416.656061</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>6.651813</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>5.0</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>35043.643030</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>8460.544337</td>\n","      <td>7.0</td>\n","      <td>1425.707450</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>743.245025</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4.0</td>\n","      <td>104.784828</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>856.579037</td>\n","      <td>8992.835847</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>4914.387768</td>\n","      <td>14.0</td>\n","      <td>663.142041</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>30.906907</td>\n","      <td>NaN</td>\n","      <td>533.725164</td>\n","      <td>2.0</td>\n","      <td>6.0</td>\n","      <td>143.967128</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>135056</th>\n","      <td>135056</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>196.068192</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>97.138634</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>135057</th>\n","      <td>135057</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>402.034438</td>\n","      <td>NaN</td>\n","      <td>638.046313</td>\n","      <td>241.225584</td>\n","      <td>NaN</td>\n","      <td>3.0</td>\n","      <td>109.331686</td>\n","      <td>...</td>\n","      <td>65.491622</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>197.113099</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>135058</th>\n","      <td>135058</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>512.741089</td>\n","      <td>NaN</td>\n","      <td>283.611949</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>2.670624</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>135059</th>\n","      <td>135059</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>124.425093</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","    <tr>\n","      <th>135060</th>\n","      <td>135060</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>58.134728</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>2.0</td>\n","      <td>NaN</td>\n","      <td>...</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>135061 rows × 149 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b7966ce2-0a91-4234-9c5a-87c3dc86a491')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b7966ce2-0a91-4234-9c5a-87c3dc86a491 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b7966ce2-0a91-4234-9c5a-87c3dc86a491');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["        client_id  is_in_club  cnt_checks_10_Мясная гастрономия  rto_std_11  \\\n","0               0           0                               NaN  300.021342   \n","1               1           0                               1.0  519.031384   \n","2               2           0                               NaN  131.165948   \n","3               3           0                               2.0         NaN   \n","4               4           0                               1.0  856.579037   \n","...           ...         ...                               ...         ...   \n","135056     135056           0                               NaN  196.068192   \n","135057     135057           0                               1.0  402.034438   \n","135058     135058           0                               NaN  512.741089   \n","135059     135059           0                               NaN  124.425093   \n","135060     135060           0                               NaN   58.134728   \n","\n","               rto_6  rto_12_Сыры  rto_12_Птица и изделия из птицы  \\\n","0        2418.116714   853.016746                              NaN   \n","1       19899.211736          NaN                              NaN   \n","2         411.347689          NaN                              NaN   \n","3       35043.643030          NaN                              NaN   \n","4        8992.835847          NaN                              NaN   \n","...              ...          ...                              ...   \n","135056           NaN          NaN                              NaN   \n","135057           NaN   638.046313                       241.225584   \n","135058           NaN   283.611949                              NaN   \n","135059           NaN          NaN                              NaN   \n","135060           NaN          NaN                              NaN   \n","\n","               rto_8  cnt_checks_9  rto_9_Мясная гастрономия  ...  \\\n","0        5092.170392           3.0                       NaN  ...   \n","1       32392.636661           7.0                       NaN  ...   \n","2        1416.656061           NaN                       NaN  ...   \n","3        8460.544337           7.0               1425.707450  ...   \n","4        4914.387768          14.0                663.142041  ...   \n","...              ...           ...                       ...  ...   \n","135056           NaN           3.0                       NaN  ...   \n","135057           NaN           3.0                109.331686  ...   \n","135058           NaN           2.0                       NaN  ...   \n","135059           NaN           2.0                       NaN  ...   \n","135060           NaN           2.0                       NaN  ...   \n","\n","        rto_stddev_12_Сыры  rto_6_Крупы и зерновые  \\\n","0                73.846425              148.316558   \n","1                      NaN                     NaN   \n","2                      NaN                     NaN   \n","3                      NaN                     NaN   \n","4                      NaN                     NaN   \n","...                    ...                     ...   \n","135056                 NaN                     NaN   \n","135057           65.491622                     NaN   \n","135058            2.670624                     NaN   \n","135059                 NaN                     NaN   \n","135060                 NaN                     NaN   \n","\n","        rto_stddev_7_Рыба и рыбные изделия  rto_stddev_8_Овощи - Фрукты  \\\n","0                                      NaN                          NaN   \n","1                               225.219998                   301.404157   \n","2                                      NaN                     6.651813   \n","3                                      NaN                          NaN   \n","4                                      NaN                    30.906907   \n","...                                    ...                          ...   \n","135056                                 NaN                          NaN   \n","135057                                 NaN                          NaN   \n","135058                                 NaN                          NaN   \n","135059                                 NaN                          NaN   \n","135060                                 NaN                          NaN   \n","\n","        rto_8_Рыба и рыбные изделия  rto_11_Сыры  cnt_checks_8_Сыры  \\\n","0                               NaN          NaN                NaN   \n","1                        525.868862  1153.293331                7.0   \n","2                               NaN          NaN                NaN   \n","3                        743.245025          NaN                NaN   \n","4                               NaN   533.725164                2.0   \n","...                             ...          ...                ...   \n","135056                          NaN    97.138634                NaN   \n","135057                          NaN   197.113099                NaN   \n","135058                          NaN          NaN                NaN   \n","135059                          NaN          NaN                NaN   \n","135060                          NaN          NaN                NaN   \n","\n","        cnt_checks_8  rto_stddev_9_Мясная гастрономия  \\\n","0                5.0                              NaN   \n","1               21.0                              NaN   \n","2                5.0                              NaN   \n","3                4.0                       104.784828   \n","4                6.0                       143.967128   \n","...              ...                              ...   \n","135056           NaN                              NaN   \n","135057           NaN                              NaN   \n","135058           NaN                              NaN   \n","135059           NaN                              NaN   \n","135060           NaN                              NaN   \n","\n","        rto_stddev_12_Крупы и зерновые  \n","0                                  NaN  \n","1                                  NaN  \n","2                                  NaN  \n","3                                  NaN  \n","4                                  NaN  \n","...                                ...  \n","135056                             NaN  \n","135057                             NaN  \n","135058                             NaN  \n","135059                             NaN  \n","135060                             NaN  \n","\n","[135061 rows x 149 columns]"]},"metadata":{},"execution_count":47}],"source":["from google.colab import drive\n","drive.mount('/content/drive')\n","df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/data.csv')\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"nZGG1L1yLQjs"},"outputs":[],"source":["df = pd.read_csv('/content/2. Cup_IT_2022_Датасет_Data_Science.csv')\n","df"]},{"cell_type":"markdown","metadata":{"id":"lSM9K6RoF9P-"},"source":["Предобработка данных. Проверка на пропуски и дубликаты, а также их обработка"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uOJ_2pIJGEfc","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646771426870,"user_tz":-180,"elapsed":1576,"user":{"displayName":"Андрей Миронов","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13288426768569375119"}},"outputId":"5683843f-2729-4f95-90d5-393a467fefcb"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":48}],"source":["df.duplicated().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0njtW0ZSHZ4m"},"outputs":[],"source":["df = df.drop('client_id',axis=1)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Ufh1CBHlGIIR","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646771426871,"user_tz":-180,"elapsed":7,"user":{"displayName":"Андрей Миронов","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13288426768569375119"}},"outputId":"a8ef290d-dbb3-4c45-e738-ebd7414a55b0"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_in_club                               0\n","cnt_checks_10_Мясная гастрономия     68700\n","rto_std_11                           21389\n","rto_6                                17631\n","rto_12_Сыры                          63613\n","                                     ...  \n","rto_11_Сыры                          66596\n","cnt_checks_8_Сыры                    69201\n","cnt_checks_8                         11002\n","rto_stddev_9_Мясная гастрономия      93026\n","rto_stddev_12_Крупы и зерновые      122516\n","Length: 148, dtype: int64"]},"metadata":{},"execution_count":50}],"source":["df.isna().sum()"]},{"cell_type":"markdown","metadata":{"id":"_bhJMwJ-GLl4"},"source":["Пропущенные значения в таблице говорят о том, что покупатель не совершал покупок, поэтому пустые значения можем заполнить нулями"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FF9JucCOGYeE","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646771430702,"user_tz":-180,"elapsed":8,"user":{"displayName":"Андрей Миронов","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13288426768569375119"}},"outputId":"819676ca-0a1b-4ec0-e144-7619387b7b31"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["is_in_club                          0\n","cnt_checks_10_Мясная гастрономия    0\n","rto_std_11                          0\n","rto_6                               0\n","rto_12_Сыры                         0\n","                                   ..\n","rto_11_Сыры                         0\n","cnt_checks_8_Сыры                   0\n","cnt_checks_8                        0\n","rto_stddev_9_Мясная гастрономия     0\n","rto_stddev_12_Крупы и зерновые      0\n","Length: 148, dtype: int64"]},"metadata":{},"execution_count":51}],"source":["df =  df.fillna(0)\n","df.isna().sum()\n","#Пустые значения заполнились корректно"]},{"cell_type":"markdown","metadata":{"id":"sBzZtLagOypv"},"source":["Построим матрицу корреляции и проверим, коррелируют ли между собой столбцы данных"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"POf82u_-_SKr"},"outputs":[],"source":["matr = df.corr()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"C-thfSFqF33h"},"outputs":[],"source":["new_matr = matr[matr != 1]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"itOCaCDuFekV"},"outputs":[],"source":["new_matr.max()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DxqxXVgSP7Yy"},"outputs":[],"source":["new_matr.max().max()"]},{"cell_type":"markdown","metadata":{"id":"cE2W2xt8PLdm"},"source":["Видим, что значения в матрице корреляции не превосходят 0.9, значит между данными нет сильной корреляции, поэтому убирать столбцы не обязательно"]},{"cell_type":"markdown","metadata":{"id":"RmCPBkguMAbK"},"source":["Пронормируем данные, так как данные в таблице сильно различаются между собой"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"oAJoSFC0_rs0"},"outputs":[],"source":["from sklearn.preprocessing import StandardScaler\n","def preprocess(features):\n","  scaler = StandardScaler()\n","  scaler.fit(features)\n","  features = scaler.transform(features)\n","  return pd.DataFrame(features)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cwl8f4B1L_Wn"},"outputs":[],"source":["target = df['is_in_club']\n","features = df.drop('is_in_club', axis=1)\n","features = preprocess(features)"]},{"cell_type":"markdown","metadata":{"id":"w5I65PrLVXjv"},"source":["Проверка дисбаланса данных и его устранение"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"hTDBt-P5I46W","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1646771440869,"user_tz":-180,"elapsed":725,"user":{"displayName":"Андрей Миронов","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13288426768569375119"}},"outputId":"3e21ae32-7d6e-4de1-edb3-6c6a15c09d2e"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    122643\n","1     12418\n","Name: is_in_club, dtype: int64"]},"metadata":{},"execution_count":54}],"source":["target.value_counts()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PTQ9_gG3Hx0u"},"outputs":[],"source":["import matplotlib.pyplot as plt\n","\n","fig, ax = plt.subplots()\n","ax.bar(['0', '1'], target.value_counts())\n","\n","ax.set_title('Распределение целевой переменной')\n","ax.set_xlabel('1 - участник клуба, 0 - не участник')\n","ax.set_ylabel('Количество значений')\n","plt.show()"]},{"cell_type":"markdown","metadata":{"id":"ra62qI4nR5nv"},"source":["Видим сильный дисбаланс данных. Проведём resampling"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"8_ki7Fz__wyR"},"outputs":[],"source":["from imblearn.over_sampling import SMOTE\n","def resampling(features, target):\n","  sm = SMOTE(random_state=42, sampling_strategy=\"minority\")\n","  features, target = sm.fit_resample(features, target)\n","  return features, target"]},{"cell_type":"markdown","metadata":{"id":"ECD1_1Y_Q5by"},"source":["Разделение данных на обучающую и тестовую выборки"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"LMkRbNkqMmSz"},"outputs":[],"source":["features_train, features_test, target_train, target_test = train_test_split(\n","    features, target, test_size = 0.3, random_state=42, shuffle=False)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"T4uo2P5TUNXm"},"outputs":[],"source":["features_train_upsample, target_train_upsample = resampling(features_train, target_train)"]},{"cell_type":"code","source":["target_train_upsample"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"j9LNXuWrOq_j","executionInfo":{"status":"ok","timestamp":1646771594996,"user_tz":-180,"elapsed":1276,"user":{"displayName":"Андрей Миронов","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"13288426768569375119"}},"outputId":"8684ac6c-9b05-48cd-86fe-b55cc66fda5e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         0\n","1         0\n","2         0\n","3         0\n","4         0\n","         ..\n","170045    1\n","170046    1\n","170047    1\n","170048    1\n","170049    1\n","Name: is_in_club, Length: 170050, dtype: int64"]},"metadata":{},"execution_count":61}]},{"cell_type":"markdown","metadata":{"id":"7aTpBf4IULy3"},"source":["Валидация для подбора гиперпараметров случайного леса по метрике f1"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gMWOAJblhdbN","outputId":"1d917054-adb8-45c3-ff53-b921d61f384f"},"outputs":[{"name":"stdout","output_type":"stream","text":["Fitting 5 folds for each of 9 candidates, totalling 45 fits\n","[CV 1/5; 1/9] START max_depth=2, n_estimators=100...............................\n","[CV 1/5; 1/9] END max_depth=2, n_estimators=100;, score=0.658 total time=  17.2s\n","[CV 2/5; 1/9] START max_depth=2, n_estimators=100...............................\n","[CV 2/5; 1/9] END max_depth=2, n_estimators=100;, score=0.719 total time=  17.0s\n","[CV 3/5; 1/9] START max_depth=2, n_estimators=100...............................\n","[CV 3/5; 1/9] END max_depth=2, n_estimators=100;, score=0.726 total time=  17.0s\n","[CV 4/5; 1/9] START max_depth=2, n_estimators=100...............................\n","[CV 4/5; 1/9] END max_depth=2, n_estimators=100;, score=0.745 total time=  17.2s\n","[CV 5/5; 1/9] START max_depth=2, n_estimators=100...............................\n","[CV 5/5; 1/9] END max_depth=2, n_estimators=100;, score=0.752 total time=  17.0s\n","[CV 1/5; 2/9] START max_depth=2, n_estimators=300...............................\n","[CV 1/5; 2/9] END max_depth=2, n_estimators=300;, score=0.660 total time=  51.3s\n","[CV 2/5; 2/9] START max_depth=2, n_estimators=300...............................\n","[CV 2/5; 2/9] END max_depth=2, n_estimators=300;, score=0.715 total time=  50.3s\n","[CV 3/5; 2/9] START max_depth=2, n_estimators=300...............................\n","[CV 3/5; 2/9] END max_depth=2, n_estimators=300;, score=0.728 total time=  50.2s\n","[CV 4/5; 2/9] START max_depth=2, n_estimators=300...............................\n","[CV 4/5; 2/9] END max_depth=2, n_estimators=300;, score=0.745 total time=  50.1s\n","[CV 5/5; 2/9] START max_depth=2, n_estimators=300...............................\n","[CV 5/5; 2/9] END max_depth=2, n_estimators=300;, score=0.755 total time=  51.3s\n","[CV 1/5; 3/9] START max_depth=2, n_estimators=500...............................\n","[CV 1/5; 3/9] END max_depth=2, n_estimators=500;, score=0.660 total time= 1.4min\n","[CV 2/5; 3/9] START max_depth=2, n_estimators=500...............................\n","[CV 2/5; 3/9] END max_depth=2, n_estimators=500;, score=0.716 total time= 1.4min\n","[CV 3/5; 3/9] START max_depth=2, n_estimators=500...............................\n","[CV 3/5; 3/9] END max_depth=2, n_estimators=500;, score=0.728 total time= 1.4min\n","[CV 4/5; 3/9] START max_depth=2, n_estimators=500...............................\n","[CV 4/5; 3/9] END max_depth=2, n_estimators=500;, score=0.746 total time= 1.4min\n","[CV 5/5; 3/9] START max_depth=2, n_estimators=500...............................\n","[CV 5/5; 3/9] END max_depth=2, n_estimators=500;, score=0.754 total time= 1.4min\n","[CV 1/5; 4/9] START max_depth=7, n_estimators=100...............................\n","[CV 1/5; 4/9] END max_depth=7, n_estimators=100;, score=0.689 total time=  52.2s\n","[CV 2/5; 4/9] START max_depth=7, n_estimators=100...............................\n","[CV 2/5; 4/9] END max_depth=7, n_estimators=100;, score=0.859 total time=  50.7s\n","[CV 3/5; 4/9] START max_depth=7, n_estimators=100...............................\n","[CV 3/5; 4/9] END max_depth=7, n_estimators=100;, score=0.873 total time=  50.7s\n","[CV 4/5; 4/9] START max_depth=7, n_estimators=100...............................\n","[CV 4/5; 4/9] END max_depth=7, n_estimators=100;, score=0.894 total time=  51.0s\n","[CV 5/5; 4/9] START max_depth=7, n_estimators=100...............................\n","[CV 5/5; 4/9] END max_depth=7, n_estimators=100;, score=0.899 total time=  50.7s\n","[CV 1/5; 5/9] START max_depth=7, n_estimators=300...............................\n"]}],"source":["parameters = {\n","    'max_depth': [2, 7, 11],\n","    'n_estimators': [100, 300, 500]\n","}\n","\n","grid = GridSearchCV(RandomForestClassifier(), parameters, scoring='f1', verbose=10)\n","grid.fit(features_train_upsample, target_train_upsample)\n","print(grid.best_params_)\n","print(grid.best_score_)"]},{"cell_type":"markdown","metadata":{"id":"xB8xSBbGfe4J"},"source":["Валидация для подбора гиперпараметров для случайного леса по метрике precision"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"1ycgUoLuteXC"},"outputs":[],"source":["parameters = {\n","    'max_depth': [2, 7, 11],\n","    'n_estimators': [100, 300, 500]\n","}\n","\n","grid = GridSearchCV(RandomForestClassifier(), parameters, scoring='precision', verbose=10)\n","grid.fit(features_train_upsample, target_train_upsample)\n","print(grid.best_params_)\n","print(grid.best_score_)"]},{"cell_type":"markdown","metadata":{"id":"TKrVpRSK76lQ"},"source":["Показатели для CatBoostClassifier"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"0AX7LlWY2K0T"},"outputs":[],"source":["parameters = {\n","    'max_depth': [2, 3, 4]\n","}\n","\n","grid = GridSearchCV(CatBoostClassifier(random_state=42), parameters, scoring='f1')\n","grid.fit(features_train_upsample, target_train_upsample)\n","print(grid.best_params_)\n","print(grid.best_score_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"O7d4Kpaf1wFQ"},"outputs":[],"source":["parameters = {\n","    'max_depth': [2, 3, 4]\n","}\n","\n","grid = GridSearchCV(CatBoostClassifier(random_state=42), parameters, scoring='precision')\n","grid.fit(features_train_upsample, target_train_upsample)\n","print(grid.best_params_)\n","print(grid.best_score_)"]},{"cell_type":"markdown","metadata":{"id":"gqF_qcGQ3wdM"},"source":["Показатели для KNN"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"IASBI4HV4U6p"},"outputs":[],"source":["parameters = {\n","    'n_neighbors': [3, 5, 7]\n","}\n","\n","grid = GridSearchCV(KNeighborsClassifier(), parameters, scoring='precision', verbose=10)\n","grid.fit(features_train_upsample, target_train_upsample)\n","print(grid.best_params_)\n","print(grid.best_score_)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"YLjGtH-y30uc"},"outputs":[],"source":["parameters = {\n","    'n_neighbors': [3, 5, 7]\n","}\n","\n","grid = GridSearchCV(KNeighborsClassifier(), parameters, scoring='f1', verbose=10)\n","grid.fit(features_train_upsample, target_train_upsample)\n","print(grid.best_params_)\n","print(grid.best_score_)"]},{"cell_type":"markdown","metadata":{"id":"FW_nB9On55Lr"},"source":["Общие результаты:"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"Zq4EutmSaLqN"},"outputs":[],"source":["col = ['model', 'mean_cv_f1', 'mean_cv_precision']\n","res_data = [['Logigstic Regression',0.32, 0.22],\n","            ['Random Forest with 11 estimators, ', 0.31, 0.21],\n","            ['Random Forest with 11 estimators, ', 0.32, 0.21],\n","            ['CatBoost', 0.32, 0.22],\n","            ['KNeighborsClassifier', ?]\n","            ]"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"J95NcZq207Oo"},"outputs":[],"source":["result = pd.DataFrame(data=res_data, columns=col)"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"jDqpLIp65Up7"},"outputs":[],"source":["result"]}],"metadata":{"accelerator":"GPU","colab":{"collapsed_sections":[],"name":"Основная копия.ipynb\"","provenance":[{"file_id":"16DaCh1gMkf_C4YLUm1z_S2-0leO1FO5Q","timestamp":1646582793397}]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
